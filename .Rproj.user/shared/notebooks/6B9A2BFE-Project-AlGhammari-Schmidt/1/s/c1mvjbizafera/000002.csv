"0","stepwidth <- 1/250"
"0","gestures$new_mag <- data.frame(matrix(NA, ncol = 250))"
"0","gestures$data <- data.frame(matrix(NA, ncol = 2003))"
"0","for (i in 1:(dim(gestures$mag)[1])) {"
"0","  # 1 remove NAs"
"0","  mag <- gestures$mag[i,]"
"0","  mag[is.na(mag)] <- 0"
"0","  # 2 pre filter"
"0","  mag <- rollapply(data = mag[!is.na(mag)], width = 10, FUN = median)"
"0","  # 3 cut"
"0","  start <- which.max(mag > gestures$q25[i,])"
"0","  stop <- length(mag) - which.max(rev(mag) > gestures$q25[i,])"
"0","  mag <- mag[start:stop]"
"0","  start <- start + 3"
"0","  stop <- stop + 3"
"0","  emg0 <- gestures$emg0[i,start:stop]"
"0","  emg1 <- gestures$emg1[i,start:stop]"
"0","  emg2 <- gestures$emg2[i,start:stop]"
"0","  emg3 <- gestures$emg3[i,start:stop]"
"0","  emg4 <- gestures$emg4[i,start:stop]"
"0","  emg5 <- gestures$emg5[i,start:stop]"
"0","  emg6 <- gestures$emg6[i,start:stop]"
"0","  emg7 <- gestures$emg7[i,start:stop]"
"0","  # remove NAs and apply runmed"
"0","  emg0 <- rollapply(data = emg0[!is.na(emg0)], width = 10, FUN = median)"
"0","  emg1 <- rollapply(data = emg1[!is.na(emg1)], width = 10, FUN = median)"
"0","  emg2 <- rollapply(data = emg2[!is.na(emg2)], width = 10, FUN = median)"
"0","  emg3 <- rollapply(data = emg3[!is.na(emg3)], width = 10, FUN = median)"
"0","  emg4 <- rollapply(data = emg4[!is.na(emg4)], width = 10, FUN = median)"
"0","  emg5 <- rollapply(data = emg5[!is.na(emg5)], width = 10, FUN = median)"
"0","  emg6 <- rollapply(data = emg6[!is.na(emg6)], width = 10, FUN = median)"
"0","  emg7 <- rollapply(data = emg7[!is.na(emg7)], width = 10, FUN = median)"
"0","  # 4 approx"
"0","  mag_approx <- approx(x = seq(0,1,1/(length(mag)-1)), y = mag, xout = seq(0,1,stepwidth), method = 'linear')$y[1:250]"
"0","  "
"0","  emg0_approx <- approx(x = seq(0,1,1/(length(emg0)-1)), y = emg0, xout = seq(0,1,stepwidth), method = 'linear')$y[1:250]"
"0","  emg1_approx <- approx(x = seq(0,1,1/(length(emg1)-1)), y = emg1, xout = seq(0,1,stepwidth), method = 'linear')$y[1:250]"
"0","  emg2_approx <- approx(x = seq(0,1,1/(length(emg2)-1)), y = emg2, xout = seq(0,1,stepwidth), method = 'linear')$y[1:250]"
"0","  emg3_approx <- approx(x = seq(0,1,1/(length(emg3)-1)), y = emg3, xout = seq(0,1,stepwidth), method = 'linear')$y[1:250]"
"0","  emg4_approx <- approx(x = seq(0,1,1/(length(emg4)-1)), y = emg4, xout = seq(0,1,stepwidth), method = 'linear')$y[1:250]"
"0","  emg5_approx <- approx(x = seq(0,1,1/(length(emg5)-1)), y = emg5, xout = seq(0,1,stepwidth), method = 'linear')$y[1:250]"
"0","  emg6_approx <- approx(x = seq(0,1,1/(length(emg6)-1)), y = emg6, xout = seq(0,1,stepwidth), method = 'linear')$y[1:250]"
"0","  emg7_approx <- approx(x = seq(0,1,1/(length(emg7)-1)), y = emg7, xout = seq(0,1,stepwidth), method = 'linear')$y[1:250]"
"0","  # 5 filter"
"0","  "
"0","  # 6 append to one line"
"0","  gestures$new_mag[i,] <- as.data.frame(t(mag_approx))"
"0","  gestures$emg0[i,4:253] <- as.data.frame(t(emg0_approx))"
"0","  gestures$emg1[i,4:253] <- as.data.frame(t(emg1_approx))"
"0","  gestures$emg2[i,4:253] <- as.data.frame(t(emg2_approx))"
"0","  gestures$emg3[i,4:253] <- as.data.frame(t(emg3_approx))"
"0","  gestures$emg4[i,4:253] <- as.data.frame(t(emg4_approx))"
"0","  gestures$emg5[i,4:253] <- as.data.frame(t(emg5_approx))"
"0","  gestures$emg6[i,4:253] <- as.data.frame(t(emg6_approx))"
"0","  gestures$emg7[i,4:253] <- as.data.frame(t(emg7_approx))"
"0","  "
"0","  gestures$data[i,1:253] <- gestures$emg0[i,]"
"0","  gestures$data[i,254:503] <- gestures$emg1[i,4:253]"
"0","  gestures$data[i,504:753] <- gestures$emg2[i,4:253]"
"0","  gestures$data[i,754:1003] <- gestures$emg3[i,4:253]"
"0","  gestures$data[i,1004:1253] <- gestures$emg4[i,4:253]"
"0","  gestures$data[i,1254:1503] <- gestures$emg5[i,4:253]"
"0","  gestures$data[i,1504:1753] <- gestures$emg6[i,4:253]"
"0","  gestures$data[i,1754:2003] <- gestures$emg7[i,4:253]"
"0","}"
"0","matplot(t(gestures$new_mag[1:10,]), type='l')"
