{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"train_model(\"svmRadial\", tuneGrid = expand.grid(C = 3^(-5:5), \n    sigma = 3^(-5:5)))","line_number":0},{"character_number":3,"end_character_number":3,"end_line_number":8,"file":"","func":"train(x = training, y = training_gest, method = method, metric = \"Kappa\", \n    tuneGrid = tuneGrid, trControl = trControl)","line_number":2},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"train.default(x = training, y = training_gest, method = method, \n    metric = \"Kappa\", tuneGrid = tuneGrid, trControl = trControl)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"looTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo, \n    method = models, ppOpts = preProcess, ctrl = trControl, lev = classLevels, \n    ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"foreach(iter = seq(along = ctrl$index), .combine = \"rbind\", .verbose = FALSE, \n    .packages = pkgs, .errorhandling = \"stop\") %:% foreach(parm = 1:nrow(info$loop), \n    .combine = \"rbind\", .verbose = FALSE, .errorhandling = \"stop\") %op% \n    { ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"e$fun(obj, substitute(ex), parent.frame(), e$data)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatch({\n    repeat {\n        args <- nextElem(it)\n        if (obj$verbose) { ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchList(expr, classes, parentenv, handlers)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"doTryCatch(return(expr), name, parentenv, handler)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatch(eval(xpr, envir = envir), error = function(e) e)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchList(expr, classes, parentenv, handlers)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"doTryCatch(return(expr), name, parentenv, handler)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(xpr, envir = envir)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(xpr, envir = envir)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"try(createModel(x = subset_x(x, ctrl$index[[iter]]), y = y[ctrl$index[[iter]]], \n    wts = wts[ctrl$index[[iter]]], method = method, tuneValue = info$loop[parm, \n        , drop = FALSE], obsLevels = lev, pp = ppp, classProbs = ctrl$classProbs, \n    sampling = ctrl$sampling, ...), silent = TRUE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchList(expr, classes, parentenv, handlers)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"doTryCatch(return(expr), name, parentenv, handler)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"createModel(x = subset_x(x, ctrl$index[[iter]]), y = y[ctrl$index[[iter]]], \n    wts = wts[ctrl$index[[iter]]], method = method, tuneValue = info$loop[parm, \n        , drop = FALSE], obsLevels = lev, pp = ppp, classProbs = ctrl$classProbs, \n    sampling = ctrl$sampling, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"method$fit(x = x, y = y, wts = wts, param = tuneValue, lev = obsLevels, \n    last = last, classProbs = classProbs, ...)","line_number":0},{"character_number":23,"end_character_number":47,"end_line_number":32,"file":"svmRadial.R","func":"kernlab::ksvm(x = as.matrix(x), y = y, kernel = kernlab::rbfdot(), \n    kpar = list(sigma = param$sigma), C = param$C, prob.model = classProbs, \n    ...)","line_number":27},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"kernlab::ksvm(x = as.matrix(x), y = y, kernel = kernlab::rbfdot(), \n    kpar = list(sigma = param$sigma), C = param$C, prob.model = classProbs, \n    ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".local(x, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"predict(ret, x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"predict(ret, x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".local(object, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"is(newdata, \"kernelMatrix\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"getClassDef(class2, .classDefEnv(class1Def))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".getClassesFromCache(Class)","line_number":0}],"message":"StopIteration"}